@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

@font-face {
  font-family: 'Vermin Vibes';
  src: url('./../fonts/VerminVibes.otf') format('opentype');
}

$color-light: #f3f3f3;
$color-dark: #3c3f43;
$color-warning: #b13957;
$board-cell-border-width: 0.04vmin;
$border-cell-width: 4.6vmin;
$board-color-primary: #77a6de;
$board-color-secondary: #0081f8;
$ship-color: #8c929c;
$ship-radius: 20px;

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
  font-size: 1.6rem;
  font-family: 'Poppins';
}

button {
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

#bg {
  background: linear-gradient(0deg, rgba(35, 35, 35, 0.4), rgba(35, 35, 35, 0.4)), url('./../images/bg.jpg');
  background-size: cover;
  width: 100vw;
  min-height: 100vh;
  background-position: 50% 70%;
  z-index: -1;
  position: fixed;
}

.game-title {
  font-family: 'Vermin Vibes';
  font-size: 5rem;
  color: $color-light;
  text-align: center;
  padding-top: 5rem;
  letter-spacing: 0.5rem;
}

.form-wrapper {
  font-family: 'Vermin Vibes';
  background: rgb(133 133 133 / 90%);
  box-shadow: -15px -10px 20px 3px rgba(0, 0, 0, 0.25), 10px 15px 20px 3px rgba(0, 0, 0, 0.25);
  border-radius: 15px;
  width: min-content;
  padding: 3rem 12rem;
  position: fixed;
  top: 30%;
  left: 50%;
  transform: translateX(-50%);
}

.form {
  color: $color-light;
  display: flex;
  flex-direction: column;
  align-items: center;

  &__header {
    font-size: 2.8rem;
  }

  &__username {
    margin: 3rem auto;

    label {
      display: block;
      font-size: 1.3rem;
      margin-bottom: 0.7rem;
    }

    input {
      font-family: 'Poppins';
      background: #c4c4c4;
      border-radius: 5px;
      width: 320px;
      height: 35px;
      border: none;
      font-size: 1.5rem;
      padding-left: 1rem;
      color: $color-dark;
      border-bottom: 5px solid transparent;
      transition: border-bottom 150ms ease-out;

      &:focus {
        outline: none;
        border-bottom: 5px solid #3c3f43;
      }
    }
  }

  &__option-btns {
    margin: 1.2rem 0;

    label {
      width: 320px;
      height: 50px;
      background: #9b9b9b;
      border: 1px solid #757575;
      border-radius: 5px;
      display: grid;
      place-items: center;
      cursor: pointer;
      margin-bottom: 2rem;
    }

    input {
      display: none;
      position: relative;

      &:checked + label {
        animation: blink 700ms ease-out infinite alternate;
      }
    }
  }

  &__button {
    font-family: 'Vermin Vibes';
    text-decoration: none;
    color: $color-dark;
    font-size: 2rem;
    background: #c4c4c4;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    padding: 1rem 5rem;
    transition: all 250ms ease-out;
    cursor: pointer;

    &:hover,
    &:active {
      transform: translateY(-5%);
      background-color: lighten(#c4c4c4, 5%);
    }
  }
}

.app-actions {
  position: fixed;
  display: flex;
  justify-content: space-between;
  bottom: 2%;
  right: 2%;
  width: 125px;
  height: 50px;

  &__bg,
  &__music {
    display: grid;
    place-items: center;
    width: 45px;
    height: 45px;
    background-color: $color-light;
    border-radius: 3px;
    cursor: pointer;
  }
}

.modal {
  padding: 1.5rem 3rem;
  position: fixed;
  background-color: $color-light;
  box-shadow: 2px 1px 3px rgb(0 0 0 /30%);
  transform: translate(-50%, 0);
  left: 50%;
  top: 10%;
  opacity: 1;
  transition: all 250ms ease-out;
  z-index: 10;
  border-radius: 5px;

  &__description {
    text-align: center;
    padding: 4rem 0 2rem;
    color: $color-warning;

    @media only screen and (max-width: 700px) {
      font-size: 1rem;
      padding: 0;
    }
  }

  &__close {
    position: absolute;
    top: 7%;
    right: 5%;
    transform: scale(1.1);
    cursor: pointer;
  }

  &--hidden {
    transform: translate(-50%, -30%);
    opacity: 0;
  }
}

.game-container {
  display: flex;
  justify-content: space-around;
  padding-top: 7rem;
}
///////////////////////////////////////////////////////////////
//* Board

.board,
.board--enemy {
  box-sizing: content-box;
  background: $board-color-primary;
  // margin-left: 4rem;
  display: grid;
  grid-template-rows: repeat(10, $border-cell-width);

  &__row {
    display: grid;
    grid-template-columns: repeat(10, $border-cell-width);

    &:last-child div {
      border-bottom: none;
    }
  }
  &__cell {
    position: relative;
    border-left: $board-cell-border-width solid rgba($color-light, 15%);
    border-bottom: $board-cell-border-width solid rgba($color-light, 15%);
    cursor: pointer;

    &:first-child {
      border-left: $board-cell-border-width solid transparent;
    }
  }
}

.move-indicator {
  margin-top: 1rem;
  height: 45px;

  @media only screen and (max-width: 800px) {
    height: 20px;
    margin-top: 0;
  }
  img {
    display: block;
    margin: auto;
    animation: indicateMove 250ms ease infinite alternate;

    @media only screen and (max-width: 800px) {
      transform: scale(0.6);
      animation: none;
    }
  }
}

.board-wrapper {
  width: 95%;
  position: fixed;
  left: 50%;
  top: 5%;
  transform: translate(-50%, 0);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  &--enemy {
    visibility: hidden;
    opacity: 0;
    z-index: 11;
  }
}

.board {
  &__cell {
    &:hover {
      cursor: default;
    }
  }
  &--enemy {
    &__cell {
      &:hover {
        background-color: lighten($board-color-primary, 5%) !important;
      }
    }
  }
}

.ships {
  display: flex;
  position: relative;

  &--rotated {
    flex-direction: row;
    align-items: flex-start;
  }
}

.ship {
  margin: 1rem;

  &--destroyed {
    position: absolute;
    left: 50%;
    top: 50%;
    background: $color-warning;

    &:hover {
      background: inherit !important;
    }
  }

  &--hidden {
    display: none;
  }

  &--computer {
    cursor: pointer !important;
    background-color: rgb(0 0 0 / 0) !important;
  }

  &--carrier {
    width: $border-cell-width * 5;
    height: $border-cell-width;
    background-color: $ship-color;
    border-radius: $ship-radius;

    &--rotated {
      width: $border-cell-width;
      height: $border-cell-width * 5;
    }
  }

  &--battleship {
    width: $border-cell-width * 4;
    height: $border-cell-width;
    background-color: $ship-color;
    border-radius: $ship-radius;

    &--rotated {
      width: $border-cell-width;
      height: $border-cell-width * 4;
    }
  }

  &--cruiser {
    width: $border-cell-width * 3;
    height: $border-cell-width;
    background-color: $ship-color;
    border-radius: $ship-radius;

    &--rotated {
      width: $border-cell-width;
      height: $border-cell-width * 3;
    }
  }

  &--submarine {
    width: $border-cell-width * 3;
    height: $border-cell-width;
    background-color: $ship-color;
    border-radius: $ship-radius;

    &--rotated {
      width: $border-cell-width;
      height: $border-cell-width * 3;
    }
  }

  &--destroyer {
    width: $border-cell-width * 2;
    height: $border-cell-width;
    background-color: $ship-color;
    border-radius: $ship-radius;

    &--rotated {
      width: $border-cell-width;
      height: $border-cell-width * 2;
    }
  }

  &-horizontal-start,
  &-vertical-start,
  &-horizontal-end,
  &-vertical-end {
    &::after {
      content: '';
      position: absolute;
      top: -1px;
      bottom: -1px;
      left: -1.5px;
      right: -1px;
    }
  }

  &-horizontal {
    &-start {
      border-radius: $ship-radius 0 0 $ship-radius;

      &::after {
        border-left: $board-cell-border-width solid rgba($color-light, 15%);
        border-bottom: $board-cell-border-width solid rgba($color-light, 15%);
      }
    }
    &-end {
      border-radius: 0 $ship-radius $ship-radius 0;

      &::after {
        border-right: $board-cell-border-width solid rgba($color-light, 15%);
        border-bottom: $board-cell-border-width solid rgba($color-light, 15%);
      }
    }
  }

  &-vertical {
    &-start {
      border-radius: $ship-radius $ship-radius 0 0;

      &::after {
        border-left: $board-cell-border-width solid rgba($color-light, 15%);
      }
    }

    &-end {
      border-radius: 0 0 $ship-radius $ship-radius;

      &::after {
        border-bottom: $board-cell-border-width solid rgba($color-light, 15%);
        border-left: $board-cell-border-width solid rgba($color-light, 15%);
      }
    }
  }

  &--attacked {
    position: relative;
    border-left: $board-cell-border-width solid rgba($color-light, 15%);
    border-bottom: $board-cell-border-width solid rgba($color-light, 15%);

    &::after {
      content: '';
      position: absolute;
      width: 2vmin;
      height: 2vmin;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-warning;
      border-radius: 50%;
    }

    &::before {
      content: '';
      position: absolute;
      width: 3vmin;
      height: 3vmin;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%) scale(0.5);
      background-color: $color-warning;
      opacity: 0.3;
      border-radius: 50%;
      animation: overfill 1s ease alternate;
    }
  }

  &--missed {
    position: relative;
    border-left: $board-cell-border-width solid rgba($color-light, 15%);
    border-bottom: $board-cell-border-width solid rgba($color-light, 15%);

    &::after {
      content: '';
      position: absolute;
      width: 2vmin;
      height: 2vmin;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-light;
      border-radius: 50%;
      border-collapse: collapse;
    }

    &::before {
      content: '';
      position: absolute;
      width: 3vmin;
      height: 3vmin;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%) scale(0.5);
      background-color: $color-light;
      opacity: 0.3;
      border-radius: 50%;
      animation: overfill 1s ease alternate;
    }
  }
}

//* Ship on board styles

.taken {
  background-color: $ship-color;
  cursor: default;
  border-bottom: $board-cell-border-width solid rgba($color-light, 15%) !important;
}

.board-btns {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 2rem;

  @media only screen and (max-width: 800px) {
    margin-top: 0;
  }
}

.board-btn {
  font-family: 'Poppins';
  font-weight: 600;
  text-align: center;
  background-color: darken($color-light, 10%);
  border: none;
  color: $color-dark;
  font-size: 1.4rem;
  padding: 1rem 2rem;
  border-radius: 3px;
  cursor: pointer;
  transition: transform 150ms ease-out;

  @media only screen and (max-width: 800px) {
    padding: 0.7rem 1.4rem;
    font-size: 1.2rem;
  }

  &--rotate {
    margin-right: 3rem;
    &:hover {
      transform: translateY(-3%);
    }
  }
  &--undo-move {
    &:hover {
      transform: translateY(-3%);
    }
  }

  &--start {
    margin-top: 4rem;
    background: lighten($board-color-secondary, 10%);
    position: relative;
    left: 25%;
    transform: translateX(-50%);
    border-radius: 5px;
    font-size: 1.6rem;
    color: $color-light;
    animation: pulse 500ms ease infinite alternate;

    @media only screen and (max-width: 800px) {
      margin-top: 1.7rem;
      font-size: 1.2rem;
    }

    &--hidden {
      opacity: 0;
      visibility: hidden;
    }
  }
}

.information-box {
  display: none;
  text-align: center;
  color: $color-light;
  font-size: 3.5vmin;
  text-transform: uppercase;
  margin-top: 1rem;
  animation: showInformation 6s cubic-bezier(0.01, 0.8, 0.71, 0.85) forwards;

  @media only screen and (max-width: 600px) {
    font-size: 2.1rem;
  }
}

@keyframes blink {
  from {
    background-color: lighten(#9b9b9b, 0%);
  }

  to {
    background-color: lighten(#9b9b9b, 11%);
  }
}

@keyframes pulse {
  from {
    transform: translateX(-50%) scale(0.98);
  }

  to {
    transform: translateX(-50%) scale(1.03);
  }
}

@keyframes indicateMove {
  from {
    transform: translateY(-3%);
  }

  to {
    transform: translateY(3%);
  }
}

@keyframes overfill {
  from {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 0.35;
  }

  to {
    transform: translate(-50%, -50%) scale(1.1);
    opacity: 0;
  }
}

@keyframes showInformation {
  0% {
    opacity: 0.3;
    transform: scale(0.7);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}
